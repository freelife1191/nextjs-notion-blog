name: Deploy to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: true
        type: boolean
      trigger:
        description: 'Trigger source'
        required: false
        default: 'manual'
        type: string
  push:
    branches:
      - main
      - develop
  schedule:
    # 1시간마다 자동 동기화 (폴백)
    - cron: '0 * * * *'

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read
  deployments: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: pages
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # ============================================
      # DEBUG MODE ONLY (develop branch or manual debug)
      # ============================================
      - name: Print GitHub context and env
        if: github.ref == 'refs/heads/develop' || inputs.debug_mode
        env:
          HAS_KEY: ${{ secrets.NOTION_API_KEY != '' }}
          HAS_DB: ${{ secrets.NOTION_DATABASE_ID != '' }}
        run: |
          echo "Branch ref: $GITHUB_REF"
          echo "Actor: $GITHUB_ACTOR"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Event: $GITHUB_EVENT_NAME"
          echo "Secret flags => NOTION_API_KEY: $HAS_KEY, NOTION_DATABASE_ID: $HAS_DB"

      # ============================================
      # INSTALL DEPENDENCIES
      # ============================================
      - name: Install deps
        run: |
          npm ci 2>&1 | tee npm-install.log

      # DEBUG: Detailed install info
      - name: Install debug info
        if: github.ref == 'refs/heads/develop' || inputs.debug_mode
        run: |
          echo "=== INSTALL DEBUG INFO ==="
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Installation log:"
          tail -20 npm-install.log

      # ============================================
      # UNIT TESTS
      # ============================================
      - name: Run unit tests
        continue-on-error: true
        run: |
          npm run test 2>&1 | tee test.log || true

      # ============================================
      # LINTER
      # ============================================
      - name: Run linter
        run: |
          npm run lint 2>&1 | tee lint.log

      # ============================================
      # BUILD (STATIC EXPORT)
      # ============================================
      - name: Build (static export)
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          NOTION_PROFILE_DATABASE_ID: ${{ secrets.NOTION_PROFILE_DATABASE_ID }}
          NOTION_SITE_DATABASE_ID: ${{ secrets.NOTION_SITE_DATABASE_ID }}
          NOTION_ABOUT_PAGE_ID: ${{ secrets.NOTION_ABOUT_PAGE_ID }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
          NEXT_PUBLIC_GISCUS_REPO: ${{ secrets.NEXT_PUBLIC_GISCUS_REPO }}
          NEXT_PUBLIC_GISCUS_REPO_ID: ${{ secrets.NEXT_PUBLIC_GISCUS_REPO_ID }}
          NEXT_PUBLIC_GISCUS_CATEGORY: ${{ secrets.NEXT_PUBLIC_GISCUS_CATEGORY }}
          NEXT_PUBLIC_GISCUS_CATEGORY_ID: ${{ secrets.NEXT_PUBLIC_GISCUS_CATEGORY_ID }}
          NEXT_PUBLIC_GISCUS_THEME_LIGHT: ${{ secrets.NEXT_PUBLIC_GISCUS_THEME_LIGHT }}
          NEXT_PUBLIC_GISCUS_THEME_DARK: ${{ secrets.NEXT_PUBLIC_GISCUS_THEME_DARK }}
        run: |
          npx next build 2>&1 | tee build.log

      # DEBUG: Build process details
      - name: Build debug info
        if: github.ref == 'refs/heads/develop' || inputs.debug_mode
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          echo "=== BUILD DEBUG INFO ==="
          echo "NOTION_API_KEY: ${NOTION_API_KEY:+SET} (length: ${#NOTION_API_KEY})"
          echo "NOTION_DATABASE_ID: ${NOTION_DATABASE_ID:+SET} (length: ${#NOTION_DATABASE_ID})"
          echo "Database ID (masked): ${NOTION_DATABASE_ID:0:8}..."
          echo ""
          echo "Testing Notion API connection..."
          curl -s -X POST "https://api.notion.com/v1/databases/${NOTION_DATABASE_ID}/query" \
            -H "Authorization: Bearer ${NOTION_API_KEY}" \
            -H "Notion-Version: 2022-06-28" \
            -H "Content-Type: application/json" \
            -d '{"page_size":1}' | head -100 || echo "Notion API test failed"

      # ============================================
      # VERIFY BUILD OUTPUT
      # ============================================
      - name: Verify build output
        run: |
          echo "=== BUILD OUTPUT VERIFICATION ==="
          if [ -f out/index.html ]; then
            echo "✅ index.html exists"
          else
            echo "❌ index.html NOT found"
            exit 1
          fi
          echo "Total files: $(find out -type f | wc -l)"
          echo "Directory size: $(du -sh out/ | cut -f1)"

      # DEBUG: Detailed output verification
      - name: Detailed output verification
        if: github.ref == 'refs/heads/develop' || inputs.debug_mode
        run: |
          echo "=== DETAILED OUTPUT ==="
          echo "HTML files:"
          find out -type f -name "*.html" | head -10
          echo "Directory structure:"
          tree out/ -L 2 || find out -type d | head -20

      # ============================================
      # UPLOAD & DEPLOY
      # ============================================
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out
        continue-on-error: true

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      # ============================================
      # DEBUG LOGS (ALWAYS ON FAILURE)
      # ============================================
      - name: Upload debug logs
        if: failure() || (github.ref == 'refs/heads/develop')
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs-${{ github.run_number }}
          path: |
            npm-install.log
            test.log
            lint.log
            build.log
          retention-days: 7

      # ============================================
      # WORKFLOW STATUS
      # ============================================
      - name: Workflow status
        if: always()
        run: |
          echo "=== WORKFLOW SUMMARY ==="
          echo "Branch: ${{ github.ref_name }}"
          echo "Job status: ${{ job.status }}"
          echo "Deployment: ${{ steps.deployment.outcome }}"
          echo "Event: ${{ github.event_name }}"

